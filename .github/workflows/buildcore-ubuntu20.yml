name: Build ROD core on Ubuntu 20.04
   
on:
  push: 
#    branches: [ build,06 ]
#  pull_request:
#    branches: [ $default-branch ]
    branches:
#     - master
#     - /^cirrus.*$/
     - dev 
#     - 0.6.1 
#     - [0-9]+.[0-9]+*
     - '[0-9].[0-9].[0-9]+'
    tags:
#     - v*
     - build
#     - v[0-9]+.[0-9]+*
     - 'v[0-9].[0-9].[0-9]+'
  pull_request:
    branches:
      - dev

jobs:
  linux64:

    runs-on: ubuntu-20.04
    env:
      APT_BASE: ccache
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_SIZE: 500M
      CCACHE_COMPRESS: 1
      PARAMS_DIR: ${{ github.workspace }}/.spacexpanse-params
    defaults:
      run:
        shell: bash
        
    steps:
    - run: echo "NOW=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV
    #- run: echo $NOW
    - uses: actions/cache@v3
      with:
        path: |
          .ccache
          .spacexpanse-params
        key: x86_64-unknown-linux-gnu-ccache-${{ env.NOW }} 
        restore-keys: |
            x86_64-unknown-linux-gnu-ccache-
    - run: |
        sudo apt-get update
        #sudo apt-get upgrade
        sudo apt-get install --no-install-recommends --no-upgrade -qq "$APT_BASE" git build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev
        sudo apt-get install software-properties-common
#        sudo apt-add-repository "ppa:ondrej/php" -y
#        sudo apt-add-repository "ppa:bitcoin/bitcoin" -y
#        sudo apt-add-repository "ppa:deadsnakes/ppa" -y
#       sudo apt-get update
#        sudo apt-get install --no-install-recommends --no-upgrade -qq "$APT_BASE" git libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev libboost-program-options-dev    
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}
    - uses: actions/cache@v3
      with:
        path: |
          depends/built
          depends/work/build
          depends/sdk-sources
          depends/x86_64-unknown-linux-gnu          
        key: ubuntu-20.04-depends-x86_64-unknown-linux-gnu-${{ env.NOW }} 
        restore-keys: ubuntu-20.04-depends-x86_64-unknown-linux-gnu-
    - run: wget https://raw.githubusercontent.com/SpaceXpanse/rod-core-wallet/0.6.8/contrib/install_db4.sh  
    - run: chmod +x install_db4.sh
    - run: mkdir db4 
    - run: ./install_db4.sh db4
    - run: ls -la
    - run: echo $GITHUB_WORKSPACE           
    - run: ./autogen.sh 
    - run: export BDB_PREFIX='/home/runner/work/rod-core-wallet/rod-core-wallet/db4' 
#    - run: ./configure --enable-reduce-exports --enable-zmq --enable-glibc-back-compat --with-gui=qt5 LDFLAGS=-static-libstdc++ CPPFLAGS=-DDEBUG_LOCKORDER
    - run: ./configure BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" BDB_CFLAGS="-I${BDB_PREFIX}/include" --without-gui --without-miniupnpc
#    - run: ./configure BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" BDB_CFLAGS="-I${BDB_PREFIX}/include" --with-gui=qt5
    - run: |
        make
        sudo make install # todo: make check /strip
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        mkdir -p deploy
        ls -lh
        cp $GITHUB_WORKSPACE/src/spacexpansed $GITHUB_WORKSPACE/src/spacexpanse-cli $GITHUB_WORKSPACE/src/spacexpanse-tx $GITHUB_WORKSPACE/src/spacexpanse-wallet $GITHUB_WORKSPACE/src/spacexpanse-util $GITHUB_WORKSPACE/deploy
        ls -lh 
        strip $GITHUB_WORKSPACE/deploy/*
        zip --junk-paths spacexpanse-rod-core-${{ github.job }} $GITHUB_WORKSPACE/deploy/*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v.${{ github.ref_name }}.${{ github.run_number }}.rc1
        release_name: SpaceXpanse ROD Core Wallet ${{ github.ref_name }}.${{ github.run_number }}-${{ github.job }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./spacexpanse-rod-core-${{ github.job }}.zip
        asset_name: spacexpanse-rod-core-${{ github.job }}.zip
        asset_content_type: application/zip
